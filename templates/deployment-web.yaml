apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mastodon.fullname" . }}-web
  labels:
    {{- include "mastodon.labels" . | nindent 4 }}
  annotations:
    {{- with (default .Values.deploymentAnnotations .Values.mastodon.web.deploymentAnnotations) }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  replicas: {{ .Values.mastodon.web.replicas }}
  selector:
    matchLabels:
      {{- include "mastodon.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: web
      app.kubernetes.io/part-of: rails
  template:
    metadata:
      annotations:
        {{- with (default .Values.podAnnotations .Values.mastodon.web.podAnnotations) }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        # roll the pods to pick up any db migrations or other changes
        {{- include "mastodon.rollingPodAnnotations" . | nindent 8 }}
      labels:
        {{- include "mastodon.globalLabels" . | nindent 8 }}
        {{- include "mastodon.selectorLabels" . | nindent 8 }}
        {{- include "mastodon.statsdExporterLabels" . | nindent 8 }}
        app.kubernetes.io/component: web
        app.kubernetes.io/part-of: rails
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "mastodon.serviceAccountName" . }}
      {{- with (default .Values.podSecurityContext .Values.mastodon.web.podSecurityContext) }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if (not .Values.mastodon.s3.enabled) }}
      volumes:
        - name: assets
          persistentVolumeClaim:
            claimName: {{ template "mastodon.fullname" . }}-assets
        - name: system
          persistentVolumeClaim:
            claimName: {{ template "mastodon.fullname" . }}-system
      {{- include "mastodon.statsdExporterVolume" $ | indent 8 }}
      {{- if .Values.mastodon.web.customDatabaseConfigYml.configMapRef.name }}
        - name: config-database-yml
          configMap:
            name: {{ .Values.mastodon.web.customDatabaseConfigYml.configMapRef.name }}
      {{- end }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}-web
          {{- with (default .Values.securityContext .Values.mastodon.web.securityContext) }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ coalesce .Values.mastodon.web.image.repository .Values.image.repository }}:{{ coalesce .Values.mastodon.web.image.tag .Values.image.tag .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - bundle
            - exec
            - puma
            - -C
            - config/puma.rb
          envFrom:
            - configMapRef:
                name: {{ include "mastodon.fullname" . }}-env
            - secretRef:
                name: {{ template "mastodon.secretName" . }}
          env:
            - name: "DB_PASS"
              valueFrom:
                secretKeyRef:
                  name: {{ template "mastodon.postgresql.secretName" . }}
                  key: password
            {{- if .Values.postgresql.readReplica.auth.existingSecret }}
            - name: "REPLICA_DB_PASS"
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgresql.readReplica.auth.existingSecret}}
                  key: password
            {{- end }}
            - name: "REDIS_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: {{ template "mastodon.redis.secretName" . }}
                  key: redis-password
            {{- if and .Values.elasticsearch.existingSecret (or .Values.elasticsearch.enabled .Values.elasticsearch.hostname) }}
            - name: "ES_PASS"
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.elasticsearch.existingSecret }}
                  key: password
            {{- end }}
            - name: "PORT"
              value: {{ .Values.mastodon.web.port | quote }}
            {{- if .Values.mastodon.web.minThreads }}
            - name: "MIN_THREADS"
              value: {{ .Values.mastodon.web.minThreads | quote }}
            {{- end }}
            {{- if .Values.mastodon.web.maxThreads }}
            - name: "MAX_THREADS"
              value: {{ .Values.mastodon.web.maxThreads | quote }}
            {{- end }}
            {{- if .Values.mastodon.web.workers }}
            - name: "WEB_CONCURRENCY"
              value: {{ .Values.mastodon.web.workers | quote }}
            {{- end }}
            {{- if .Values.mastodon.web.persistentTimeout }}
            - name: "PERSISTENT_TIMEOUT"
              value: {{ .Values.mastodon.web.persistentTimeout | quote }}
            {{- end }}
            {{- if (and .Values.mastodon.s3.enabled .Values.mastodon.s3.existingSecret) }}
            - name: "AWS_SECRET_ACCESS_KEY"
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.mastodon.s3.existingSecret }}
                  key: AWS_SECRET_ACCESS_KEY
            - name: "AWS_ACCESS_KEY_ID"
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.mastodon.s3.existingSecret }}
                  key: AWS_ACCESS_KEY_ID
            {{- end }}
            {{- if .Values.mastodon.deepl.enabled }}
            - name: "DEEPL_API_KEY"
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.mastodon.deepl.apiKeySecretRef.name }}
                  key: {{ .Values.mastodon.deepl.apiKeySecretRef.key }}
            {{- end }}
            {{- if .Values.mastodon.hcaptcha.enabled }}
            - name: "HCAPTCHA_SECRET_KEY"
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.mastodon.hcaptcha.secretKeySecretRef.name }}
                  key: {{ .Values.mastodon.hcaptcha.secretKeySecretRef.key }}
            {{- end }}
            {{- if and .Values.mastodon.cacheBuster.enabled .Values.mastodon.cacheBuster.authToken.existingSecret }}
            - name: CACHE_BUSTER_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.mastodon.cacheBuster.authToken.existingSecret }}
                  key: password
            {{- end }}
          {{- if (not .Values.mastodon.s3.enabled) }}
          volumeMounts:
            - name: assets
              mountPath: /opt/mastodon/public/assets
            - name: system
              mountPath: /opt/mastodon/public/system
          {{- end }}
          {{- if .Values.mastodon.web.customDatabaseConfigYml.configMapRef.name }}
            - name: config-database-yml
              mountPath: /opt/mastodon/config/database.yml
              subPath: {{ .Values.mastodon.web.customDatabaseConfigYml.configMapRef.key }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.mastodon.web.port }}
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: http
          readinessProbe:
            httpGet:
              path: /health
              port: http
          startupProbe:
            httpGet:
              path: /health
              port: http
            failureThreshold: 30
            periodSeconds: 5
          {{- with (default .Values.resources .Values.mastodon.web.resources) }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
        {{- include "mastodon.statsdExporterContainer" $ | indent 8 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with (default .Values.affinity .Values.mastodon.web.affinity) }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with (default .Values.topologySpreadConstraints .Values.mastodon.web.topologySpreadConstraints) }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
